{"/about-me/":{"data":{"":" ℹ️ Curiosity \u0026 Innovation\nI’m a technologist dedicated to transforming complex challenges into elegant solutions. Hello, I’m Hassaan. From a young age, I’ve been captivated by the intricate systems that power our world. At 16, I delved into programming and discovered a profound satisfaction in bringing abstract concepts to life through code. The seamless blend of intangible logic and tangible outcomes in technology continues to fuel my passion and drive.\nWork Experience Projects Education \u0026 Achievements Software Engineer | Freelancing Developed scalable game servers using advanced IP masking and private routing. Engineered robust Linux systems with built-in redundancies. Built facial recognition tools and efficient web scrapers for high-volume data extraction. Data Scientist | HWCM LLC (USA, Florida) Deployed trading strategies with custom analytics and visualization tools. Integrated real-time data processing with containerization and version control. Automated workflows and resolved critical bugs for live trading systems. Open Source Intern | InfoTab Enterprises (UK, London) Contributed code enhancements and submitted impactful pull requests. Collaborated on cross-platform projects to improve system functionalities. Embedded Software Engineer | HWCM LLC (USA, Florida) Developed an IoT-based hygiene monitoring system for healthcare. Optimized a C/C++ codebase for improved performance and reduced development time. Implemented robust data protocols and remote diagnostics. Selected Projects\nLumibot Patch: Fixed a critical bug affecting live trading. CODETHESAUR.US: Enhanced Python learning resources on stacks and queues. Python Scraper: Engineered a tool using Scrapy to collect high-volume job market data. ToDo Master: Built a multi-user task management app in C++. SimplePyImgComp: Developed an efficient, multi-threaded image compressor. OLX Clone: Created a prototype marketplace using Android Studio. Education\nIntermediate (Pre-Engineering)\nIslamia College Peshawar, Pakistan (08/2020 – 06/2022)\nBachelor of Software Engineering\nFAST-NUCES, Pakistan (08/2022 – 06/2026)\nCompetitive Programming \u0026 Technical Competitions\nICPC: Online and onsite qualifier in 2023 and 2024. IEEExtreme: National ranking of 17th in 2022; advanced to 3rd nationally (97th globally) in 2023 and 2nd nationally in 2024 ACM Hackathon: Runner-up position (10/2022). CodeRush: Winner for cleanest code (06/2023). NUTEC’24 \u0026 FPSC’24: Top performer in regional and inter-university contests (04/2024, 05/2024). Leadership \u0026 Communication\nPresident ACM FAST-NUCES Chapter: Performed various technical events including workshops and programming competitions. Teaching Role: Assisted in various programming courses for multiple years. "},"title":"About Me"},"/blog/installing-and-setting-up-hugo-with-the-hextra-theme-a-step-by-step-guide/":{"data":{"":"","1-introduction#1. Introduction":"","10-troubleshooting--faqs#10. Troubleshooting \u0026amp; FAQs":"","11-conclusion--additional-resources#11. Conclusion \u0026amp; Additional Resources":"Welcome to my comprehensive guide on using Hugo with the Hextra theme. In this document, I share a step-by-step process, from installation to deployment, that will help you build a modern, responsive website with ease.\nSource CodeThe source code for the entire project is available on my GitHub. 1. Introduction Welcome to this guide on installing and setting up Hugo with the Hextra theme. In this post, we’ll walk you through everything you need to get started, from installing Hugo to configuring the Hextra theme, so you can build a beautiful, modern website or blog.\nWhat is Hugo? Hugo is a fast, modern, and flexible static site generator that transforms your Markdown files into a fully functional website. With its impressive speed and extensive customization options, Hugo is a favorite among developers and content creators alike.\nIntroducing Hextra Hextra is a modern, responsive Hugo theme designed to help you create professional blogs and documentation sites with ease. Key features include:\nResponsive Design: Adapts seamlessly to mobile, tablet, and desktop devices. Dark and Light Modes: Easily toggle between themes to match your content or audience preference. Built-In Full-Text Search: Powered by FlexSearch, enabling quick and efficient content search. Customizable Layouts and Components: Simplify your site’s configuration and design with a variety of out-of-the-box options. In this guide, you’ll learn how to:\nSet up Hugo on your system. Create a new Hugo site. Install and configure the Hextra theme using either Hugo Modules or Git Submodules. Create your first content pages and preview your site locally. Explore deployment options and troubleshooting tips. Let’s get started on building a powerful website with Hugo and Hextra!\n2. Prerequisites Before diving into setting up Hugo with the Hextra theme, ensure you have the following tools and knowledge in place.\nRequired Software Hugo (Extended Version)Hugo is a fast static site generator that transforms Markdown files into a full website. GitGit is essential for version control and managing theme modules or submodules. Go (Optional)While not mandatory, having Go installed can help with module management. Basic Knowledge and Skills Command-Line Usage: You should be comfortable using terminal commands. Markdown: Familiarity with Markdown syntax is necessary for creating and editing content. Git Basics: Understanding Git operations (clone, commit, push) will be beneficial. Need More Info? For beginners, here are some useful resources:\nHugo Documentation Git Book Markdown Guide 3. Installing Hugo In this step, we’ll install the extended version of Hugo, a requirement for taking full advantage of the Hextra theme.\nOfficial Hugo Installation Guide Important\nEnsure you download and install the extended version of Hugo, which includes SCSS processing and other advanced features needed by Hextra.\nmacOSLinuxWindows Install Hugo Using Homebrew, run:\nbrew install hugo Verify Installation Run:\nhugo version You should see the installed Hugo version.\nInstall Hugo Using Snap, run:\nsudo snap install hugo --channel=extended Verify Installation Run:\nhugo version Ensure the correct version is displayed.\nInstall Hugo Using Chocolatey, run:\nchoco install hugo-extended -y Verify Installation Run:\nhugo version Confirm that Hugo is installed by checking the version output.\nTip\nIf you prefer not to use a package manager, you can manually download the Hugo Extended binary from the Hugo Releases page and follow the provided installation instructions.\nOnce Hugo is installed and verified, you’re ready to move on to creating your new Hugo site!\n4. Creating a New Hugo Site In this step, you’ll create a new Hugo site that will serve as the foundation for your project.\nNote\nReplace my-site with your desired project name.\nOpen Your Terminal Open your preferred terminal application.\nCreate the Site Run the following command to create a new Hugo site using YAML as the configuration format:\nhugo new site my-site --format=yaml Navigate to Your Site Directory Change into your new site’s directory:\ncd my-site Important\nThis command sets up the basic directory structure for your Hugo site. You’ll see folders like content, layouts, static, etc.\nOnce your site is created, you’re ready to install the Hextra theme and move on to configuration.\n5. Installing the Hextra Theme Tip\nThe Hugo Modules method is recommended because it automatically handles theme updates and dependencies.\nHugo ModulesGit Submodules Initialize the Hugo Module Note\nReplace yourusername/mysite with your username and desired project name. Navigate to your site directory and run:\nhugo mod init github.com/yourusername/my-site Add the Hextra Theme Run the following command to add Hextra:\nhugo mod get github.com/imfing/hextra Configure Your Site Open your hugo.yaml (or equivalent config file) and add the following to import the theme:\nmodule: imports: - path: github.com/imfing/hextra Add Hextra as a Submodule Run this command in your site directory:\ngit submodule add https://github.com/imfing/hextra.git themes/hextra Update the Configuration File In your hugo.yaml, set the theme by adding:\ntheme: hextra Once you’ve installed Hextra using your preferred method, you’re ready to move on to configuring the theme for your site.\n6. Configuring the Hextra Theme Once you’ve installed the Hextra theme, it’s time to configure it to suit your site’s needs. This is done by editing your configuration file (e.g., hugo.yaml) in your site’s root directory.\nTip\nHextra offers a wide range of configuration options for customizing your site’s layout, navigation, and appearance. For more details, refer to the Hextra Documentation.\nOpen Your Configuration File Locate and open the configuration file (for example, hugo.yaml) in the root directory of your Hugo site.\nSet Basic Site Parameters Define your site’s essential details such as the base URL, title, and language:\nNote\nReplace baseURL, title and languageCode with your desired values.\nbaseURL: \"https://example.com/\" title: \"My Hugo Site\" languageCode: \"en-us\" Configure Hextra-Specific Settings Customize the Hextra theme by adding or updating the following parameters under params:\nparams: navbar: displayTitle: true displayLogo: true logo: path: \"images/logo.svg\" dark: \"images/logo-dark.svg\" link: \"/\" width: 40 height: 20 theme: default: system # Options: system, light, dark displayToggle: true Customize Menus and Other Elements Set up your navigation menu and other site elements as needed:\nmenu: main: - name: \"Documentation\" pageRef: \"/docs\" weight: 1 - name: \"Blog\" pageRef: \"/blog\" weight: 2 Important\nAfter updating your configuration, restart your Hugo server to apply the changes.\nWith your Hextra theme now configured, you’re ready to start creating content and further customizing your site.\n7. Creating Your First Content Pages Now that your Hugo site is set up and the Hextra theme is configured, it’s time to start adding content to your site. In this step, you’ll create a homepage and a documentation page using Hugo’s new command.\nTip\nUse the hugo new command to quickly generate content files with the appropriate front matter.\nCreate the Homepage Run the following command to generate your homepage:\nhugo new content/_index.md Create the Documentation Page Generate a new page for documentation:\nhugo new content/docs/_index.md Edit Your Content Files Open the newly created files in your preferred text editor. Customize the front matter and add your content. For example, your content/_index.md might start like this:\n--- title: \"Welcome to My Hugo Site\" date: 2025-01-01T12:00:00Z draft: true --- Then add your Markdown content below the front matter.\nImportant\nRemember: Set draft: false to publish your content on your live site.\nFor more details on organizing content, you might find the following resource helpful: Hugo Content Organization Once you’ve created and customized your content pages, you’re ready to preview your site locally.\n8. Running the Site Locally Now that your content is in place, it’s time to preview your site locally and see your changes in action.\nTip\nUse the hugo server command with the --buildDrafts flag to preview draft content and --disableFastRender for more reliable live-reloading.\nStart the Local Server Open your terminal in your site’s root directory and run:\nhugo server --buildDrafts --disableFastRender Access Your Site Once the server is running, open your browser and navigate to:\nhttp://localhost:1313/ Test Your Changes Edit your content files and save them, your site should automatically refresh to reflect your changes.\nImportant\nIf you encounter any issues, review your terminal output for error messages and ensure your configuration files are correctly set up.\nWith your site running locally, you can now test and fine-tune your content before moving on to deployment.\n9. Deployment Options Once your site is running perfectly on your local machine, it’s time to deploy it and share it with the world. Hugo’s static output makes deployment quick and simple across many hosting platforms.\nTip\nGitHub Pages is the recommended deployment option as it is free and the easiest.\nBuild Your Site for Production Run the following command to generate the production-ready files:\nhugo --gc --minify This command cleans up unused files and minifies your site’s assets for optimal performance.\nDeploy Your Site I recommend the following deployment methods:\nGitHub PagesNetlifyCloudflare PagesVercelOthers For GitHub Pages, you can push the contents of your public/ folder to the gh-pages branch, or use GitHub Actions. For example, you might use the workflow below:\nGitHub Actions Configuration Here is a sample workflow\n.github/workflows/pages.yamlname: Deploy Hugo site to Pages on: push: branches: [\"main\"] workflow_dispatch: permissions: contents: read pages: write id-token: write concurrency: group: \"pages\" cancel-in-progress: false defaults: run: shell: bash jobs: build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.138.0 steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 submodules: recursive - name: Setup Go uses: actions/setup-go@v5 with: go-version: '1.22' - name: Setup Pages id: pages uses: actions/configure-pages@v4 - name: Setup Hugo run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026\u0026 sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Build with Hugo env: HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo --gc --minify --baseURL \"${{ steps.pages.outputs.base_url }}/\" - name: Upload artifact uses: actions/upload-pages-artifact@v3 deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4 By default, this workflow deploys to https://\u003cUSERNAME\u003e.github.io/\u003cREPO\u003e/. Update the --baseURL parameter if you need to deploy to https://\u003cUSERNAME\u003e.github.io/ or your own domain.\nConnect your repository to Netlify. Set the Build command to hugo --gc --minify and the Publish directory to public. If needed, add the environment variable HUGO_VERSION with the value 0.138.0. To use Cloudflare Pages:\nPush your site source code to a Git repository (e.g. GitHub). In the Cloudflare dashboard, select your account and go to Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git. When setting up builds and deployments, use these configuration values: Configuration Value Production branch main Build command hugo --gc --minify Build directory public For more details, check the Deploy a Hugo site guide. Import your Hugo project into Vercel via the Vercel Dashboard. In your project settings, select Hugo as the Framework Preset and override the commands as follows:\nBuild Command: hugo --gc --minify Install Command: yum install golang You can also deploy on Firebase or another static hosting provider by using their specific deployment instructions. Important\nBefore deploying: Ensure that all content is finalised and that your site works flawlessly on your local server.\nAdditional Resources Netlify GitHub Pages Vercel Once deployed, your site will be live at your configured domain, and you can share it with the world. Enjoy your new Hugo-powered website!\n10. Troubleshooting \u0026 FAQs Sometimes things may not work as expected. In this step, we’ll cover some common issues and provide tips for resolving them.\nImportant\nAlways review your terminal output for error messages. Many issues can be quickly resolved by checking the logs.\nCheck Your Configuration Ensure that your configuration file (e.g., hugo.yaml) is correctly formatted and contains all necessary parameters. Tip: Use an online YAML validator if you’re unsure.\nReview Terminal Logs When running hugo server or building your site, check your terminal for error messages or warnings that may indicate misconfigurations or missing files.\nVerify Theme Installation Confirm that Hextra is correctly installed:\nFor Hugo Modules: Check your hugo.mod file and the module import in your configuration. For Git Submodules: Ensure the themes/hextra directory exists and is populated. Consult the Documentation Refer to the Hextra Documentation and the Hugo Documentation for further guidance on troubleshooting specific issues.\nTip\nIf a page isn’t rendering as expected, double-check the front matter in your Markdown files for correct syntax and required fields.\n11. Conclusion \u0026 Additional Resources In this final step, we wrap up the guide and provide you with additional resources to help you further customize your site and troubleshoot any issues.\nConclusion You’ve now learned how to:\nInstall Hugo Extended. Create a new Hugo site. Install the Hextra theme using either Hugo Modules or Git Submodules. Configure the theme to match your needs. Create and manage your content pages. Run your site locally for testing. Deploy your website. With these steps, you have a solid foundation for building a beautiful and responsive website using Hugo and Hextra. Enjoy experimenting with advanced customizations and make your site truly your own!\nAdditional Resources Hugo Documentation Hextra Theme Documentation Hugo GitHub Repository Important\nKeep exploring, stay curious, and don’t hesitate to seek help in the Hugo and Hextra communities if you need further assistance.\nThank you for following this guide, and happy coding!","2-prerequisites#2. Prerequisites":"","3-installing-hugo#3. Installing Hugo":"","4-creating-a-new-hugo-site#4. Creating a New Hugo Site":"","5-installing-the-hextra-theme#5. Installing the Hextra Theme":"","6-configuring-the-hextra-theme#6. Configuring the Hextra Theme":"","7-creating-your-first-content-pages#7. Creating Your First Content Pages":"","8-running-the-site-locally#8. Running the Site Locally":"","9-deployment-options#9. Deployment Options":""},"title":"Installing and Setting Up Hugo With the Hextra Theme: a Step by Step Guide"},"/contact/":{"data":{"":"","get-in-touch#Get in Touch":"I’d love to hear from you! Whether you have questions, opportunities, or just want to say hello, you can reach out through any of the following channels:\nLinkedInConnect with me professionally EmailSend me an email DiscordMessage me on Discord Feel free to drop me a message on any of these platforms!"},"title":"Contact"},"/credits/":{"data":{"acknowledgments#Acknowledgments":" YannickDesign inspiration and invaluable mentorship Hisam SaharIntroduced these amazing tools through his presentation This site is open source. Found something that could be improved? Submit an issue or pull request.","building-blocks#Building Blocks":"Building BlocksThis website represents a blend of modern web technologies and thoughtful design choices. Built with Hugo, a lightning-fast static site generator, and enhanced by the elegant Hextra theme.","core-technologies#Core Technologies":" HugoThe world’s fastest framework for building websites HextraModern, batteries-included Hugo theme "},"title":"Credits"}}